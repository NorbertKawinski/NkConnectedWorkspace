/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package net.kawinski.connectedworkspace;

import lombok.extern.slf4j.Slf4j;
import net.kawinski.connectedworkspace.configuration.ClientConfig;
import net.kawinski.connectedworkspace.utils.Utils;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.nio.charset.StandardCharsets;

@Slf4j
public class Client {

    private final ClientConfig config;

    public Client(ClientConfig config) {
        this.config = config;
    }

    public void run() throws IOException {
        log.info("Connecting to server");
        SocketChannel connection = SocketChannel.open(new InetSocketAddress("localhost", config.getServerPort()));
        ByteBuffer buffer = ByteBuffer.allocate(256);
        log.info("Connected to server");

        while(true) {
            String message = Utils.read(connection, buffer);
            log.info("Received message from server: " + message);
            onMessage(message);
        }
    }

    public void onMessage(String message) {
        String[] msgParts = message.split(",");
        String msgType = msgParts[0];

        switch (msgType) {
            case "move": {
                int x = Integer.parseInt(msgParts[1]);
                int y = Integer.parseInt(msgParts[2]);
                log.info("Moving mouse: " + x + ", " + y);

                // Move mouse
                break;
            }
            case "press": {
                // Press key (keyboard or mouse)
                break;
            }
            case "get-clip": {
                // Send cliboard (file?) to server
                break;
            }
            case "set-clip": {
                // Receive clipboard (file?) from server
                break;
            }
        }
    }

}
